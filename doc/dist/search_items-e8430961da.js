searchNodes=[{"ref":"MazeServer.html","title":"MazeServer","type":"module","doc":"MazeServer keeps the contexts that define your domain and business logic. Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others."},{"ref":"MazeServer.MazeAi.html","title":"MazeServer.MazeAi","type":"module","doc":"this is an AI for maze game that developed with elixir it solve maze with this algorithms: Breadth-first search (BFS) Iterative deepening depth-first search (IDS) A search (A Star) all of this algorithms will use graph search algorithm with * special frontier rules or heuristical function."},{"ref":"MazeServer.MazeAi.html#create_point/6","title":"MazeServer.MazeAi.create_point/6","type":"function","doc":"it takes a location in board (x, y) and make a point node."},{"ref":"MazeServer.MazeAi.html#expand/9","title":"MazeServer.MazeAi.expand/9","type":"function","doc":"expand function will create child nodes."},{"ref":"MazeServer.MazeAi.html#expander/4","title":"MazeServer.MazeAi.expander/4","type":"function","doc":"duty of expander is check frontier queue and explored set for avoiding of redundancy and revisiting a node and visiting a wall node. it will return a new valid frontier. Examples iex&gt; MazeServer.MazeAi.expander([%{x: 1, y: 2}], %{x: 1, y: 2, state: &quot;0&quot;}, [%{x: 4, y: 3}], fn f, p -&gt; List.insert_at(f, -1, p) end) [%{x: 1, y: 2}] iex&gt; MazeServer.MazeAi.expander([%{x: 2, y: 4}], %{x: 1, y: 2, state: &quot;0&quot;}, [%{x: 1, y: 2}], fn f, p -&gt; List.insert_at(f, -1, p) end) [%{x: 2, y: 4}] iex&gt; MazeServer.MazeAi.expander([%{x: 1, y: 2}], %{x: 4, y: 2, state: &quot;1&quot;}, [%{x: 4, y: 3}], fn f, p -&gt; List.insert_at(f, -1, p) end) [%{x: 1, y: 2}] iex&gt; MazeServer.MazeAi.expander([%{x: 1, y: 2}], %{x: 4, y: 2, state: &quot;0&quot;}, [%{x: 4, y: 3}], fn f, p -&gt; List.insert_at(f, -1, p) end) [%{x: 1, y: 2}, %{state: &quot;0&quot;, x: 4, y: 2}]"},{"ref":"MazeServer.MazeAi.html#find_target/1","title":"MazeServer.MazeAi.find_target/1","type":"function","doc":"find_target takes a board, search for target point in it then return end_point. Examples iex&gt; MazeServer.MazeAi.find_target([&quot;111&quot;, &quot;121&quot;, &quot;111&quot;]) {1, 1}"},{"ref":"MazeServer.MazeAi.html#graph_search/8","title":"MazeServer.MazeAi.graph_search/8","type":"function","doc":"graph_search function is a basical function for search on graphs. it use frontier_push and frontier_pop for define frontier rules."},{"ref":"MazeServer.MazeAi.html#graph_search/12","title":"MazeServer.MazeAi.graph_search/12","type":"function","doc":""},{"ref":"MazeServer.MazeAi.html#init_board/0","title":"MazeServer.MazeAi.init_board/0","type":"function","doc":"this function will return main test board."},{"ref":"MazeServer.MazeAi.AStar.html","title":"MazeServer.MazeAi.AStar","type":"module","doc":"this module define A* rules. in this algorithm, frontier is same as BFS with a tiny difference! frontier will sort by ascending path_cost order after every push."},{"ref":"MazeServer.MazeAi.AStar.html#expander/4","title":"MazeServer.MazeAi.AStar.expander/4","type":"function","doc":"this expander is same as MazeAi.expander but it will check path_cost for expand a node!"},{"ref":"MazeServer.MazeAi.AStar.html#frontier_pop/1","title":"MazeServer.MazeAi.AStar.frontier_pop/1","type":"function","doc":"frontier pop rule for A*."},{"ref":"MazeServer.MazeAi.AStar.html#frontier_push/2","title":"MazeServer.MazeAi.AStar.frontier_push/2","type":"function","doc":"frontier push rule for A*. it will sort frontier by ascending path_cost order."},{"ref":"MazeServer.MazeAi.AStar.html#g/2","title":"MazeServer.MazeAi.AStar.g/2","type":"function","doc":"it will calculates path cost of a node with path cost of its parent node plus one!"},{"ref":"MazeServer.MazeAi.AStar.html#h/2","title":"MazeServer.MazeAi.AStar.h/2","type":"function","doc":"heuristic calculation with diagonal distance calculator. Examples iex&gt; MazeServer.MazeAi.AStar.h({1, 2}, {4, 5}) 6 and this is true: 2 * max((4-1), (5-2)) = 6"},{"ref":"MazeServer.MazeAi.AStar.html#search/2","title":"MazeServer.MazeAi.AStar.search/2","type":"function","doc":"A* search. it will search same as BFS."},{"ref":"MazeServer.MazeAi.BFS.html","title":"MazeServer.MazeAi.BFS","type":"module","doc":"this module define BFS rules. in this algorithm, frontier is same as queue! (FIFO queue)"},{"ref":"MazeServer.MazeAi.BFS.html#frontier_pop/1","title":"MazeServer.MazeAi.BFS.frontier_pop/1","type":"function","doc":"frontier poh rule for BFS this function will remove first node of list. (First Out)"},{"ref":"MazeServer.MazeAi.BFS.html#frontier_push/2","title":"MazeServer.MazeAi.BFS.frontier_push/2","type":"function","doc":"frontier push rule for BFS this function will add any new node in the last of list. (First In)"},{"ref":"MazeServer.MazeAi.BFS.html#search/2","title":"MazeServer.MazeAi.BFS.search/2","type":"function","doc":"BFS search function."},{"ref":"MazeServer.MazeAi.IDS.html","title":"MazeServer.MazeAi.IDS","type":"module","doc":"this module define IDS rules. in this algorithm, frontier is same as stack!"},{"ref":"MazeServer.MazeAi.IDS.html#frontier_pop/1","title":"MazeServer.MazeAi.IDS.frontier_pop/1","type":"function","doc":"frontier pop rule for IDS this function will remove last node of list. (Last out)"},{"ref":"MazeServer.MazeAi.IDS.html#frontier_push/2","title":"MazeServer.MazeAi.IDS.frontier_push/2","type":"function","doc":"frontier push rule for IDS this function will add any new node in the last of list. (First In)"},{"ref":"MazeServer.MazeAi.IDS.html#search/2","title":"MazeServer.MazeAi.IDS.search/2","type":"function","doc":"IDS search function. it simulate for loops with recursive solution."},{"ref":"MazeServerWeb.html","title":"MazeServerWeb","type":"module","doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use MazeServerWeb, :controller use MazeServerWeb, :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here."},{"ref":"MazeServerWeb.html#__using__/1","title":"MazeServerWeb.__using__/1","type":"macro","doc":"When used, dispatch to the appropriate controller/view/etc."},{"ref":"MazeServerWeb.html#channel/0","title":"MazeServerWeb.channel/0","type":"function","doc":""},{"ref":"MazeServerWeb.html#controller/0","title":"MazeServerWeb.controller/0","type":"function","doc":""},{"ref":"MazeServerWeb.html#router/0","title":"MazeServerWeb.router/0","type":"function","doc":""},{"ref":"MazeServerWeb.html#view/0","title":"MazeServerWeb.view/0","type":"function","doc":""},{"ref":"MazeServerWeb.Endpoint.html","title":"MazeServerWeb.Endpoint","type":"module","doc":""},{"ref":"MazeServerWeb.Endpoint.html#broadcast/3","title":"MazeServerWeb.Endpoint.broadcast/3","type":"function","doc":"Broadcasts a msg as event in the given topic. Callback implementation for Phoenix.Endpoint.broadcast/3."},{"ref":"MazeServerWeb.Endpoint.html#broadcast!/3","title":"MazeServerWeb.Endpoint.broadcast!/3","type":"function","doc":"Broadcasts a msg as event in the given topic. Raises in case of failures. Callback implementation for Phoenix.Endpoint.broadcast!/3."},{"ref":"MazeServerWeb.Endpoint.html#broadcast_from/4","title":"MazeServerWeb.Endpoint.broadcast_from/4","type":"function","doc":"Broadcasts a msg from the given from as event in the given topic. Callback implementation for Phoenix.Endpoint.broadcast_from/4."},{"ref":"MazeServerWeb.Endpoint.html#broadcast_from!/4","title":"MazeServerWeb.Endpoint.broadcast_from!/4","type":"function","doc":"Broadcasts a msg from the given from as event in the given topic. Raises in case of failures. Callback implementation for Phoenix.Endpoint.broadcast_from!/4."},{"ref":"MazeServerWeb.Endpoint.html#call/2","title":"MazeServerWeb.Endpoint.call/2","type":"function","doc":"Callback implementation for Plug.call/2."},{"ref":"MazeServerWeb.Endpoint.html#child_spec/1","title":"MazeServerWeb.Endpoint.child_spec/1","type":"function","doc":"Returns the child specification to start the endpoint under a supervision tree."},{"ref":"MazeServerWeb.Endpoint.html#config/2","title":"MazeServerWeb.Endpoint.config/2","type":"function","doc":"Returns the endpoint configuration for key Returns default if the key does not exist."},{"ref":"MazeServerWeb.Endpoint.html#config_change/2","title":"MazeServerWeb.Endpoint.config_change/2","type":"function","doc":"Reloads the configuration given the application environment changes."},{"ref":"MazeServerWeb.Endpoint.html#host/0","title":"MazeServerWeb.Endpoint.host/0","type":"function","doc":"Returns the host for the given endpoint."},{"ref":"MazeServerWeb.Endpoint.html#init/1","title":"MazeServerWeb.Endpoint.init/1","type":"function","doc":"Callback implementation for Plug.init/1."},{"ref":"MazeServerWeb.Endpoint.html#instrument/3","title":"MazeServerWeb.Endpoint.instrument/3","type":"macro","doc":"Instruments the given function. event is the event identifier (usually an atom) that specifies which instrumenting function to call in the instrumenter modules. runtime is metadata to be associated with the event at runtime (e.g., the query being issued if the event to instrument is a DB query). Examples instrument :render_view, %{view: &quot;index.html&quot;}, fn -&gt; render(conn, &quot;index.html&quot;) end"},{"ref":"MazeServerWeb.Endpoint.html#path/1","title":"MazeServerWeb.Endpoint.path/1","type":"function","doc":"Generates the path information when routing to this endpoint."},{"ref":"MazeServerWeb.Endpoint.html#script_name/0","title":"MazeServerWeb.Endpoint.script_name/0","type":"function","doc":"Generates the script name."},{"ref":"MazeServerWeb.Endpoint.html#start_link/1","title":"MazeServerWeb.Endpoint.start_link/1","type":"function","doc":"Starts the endpoint supervision tree."},{"ref":"MazeServerWeb.Endpoint.html#static_integrity/1","title":"MazeServerWeb.Endpoint.static_integrity/1","type":"function","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs."},{"ref":"MazeServerWeb.Endpoint.html#static_lookup/1","title":"MazeServerWeb.Endpoint.static_lookup/1","type":"function","doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity."},{"ref":"MazeServerWeb.Endpoint.html#static_path/1","title":"MazeServerWeb.Endpoint.static_path/1","type":"function","doc":"Generates a route to a static file in priv/static."},{"ref":"MazeServerWeb.Endpoint.html#static_url/0","title":"MazeServerWeb.Endpoint.static_url/0","type":"function","doc":"Generates the static URL without any path information. It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set."},{"ref":"MazeServerWeb.Endpoint.html#struct_url/0","title":"MazeServerWeb.Endpoint.struct_url/0","type":"function","doc":"Generates the endpoint base URL but as a URI struct. It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers."},{"ref":"MazeServerWeb.Endpoint.html#subscribe/1","title":"MazeServerWeb.Endpoint.subscribe/1","type":"function","doc":""},{"ref":"MazeServerWeb.Endpoint.html#subscribe/3","title":"MazeServerWeb.Endpoint.subscribe/3","type":"function","doc":""},{"ref":"MazeServerWeb.Endpoint.html#unsubscribe/1","title":"MazeServerWeb.Endpoint.unsubscribe/1","type":"function","doc":"Unsubscribes the caller from the given topic. Callback implementation for Phoenix.Endpoint.unsubscribe/1."},{"ref":"MazeServerWeb.Endpoint.html#url/0","title":"MazeServerWeb.Endpoint.url/0","type":"function","doc":"Generates the endpoint base URL without any path information. It uses the configuration under :url to generate such."},{"ref":"MazeServerWeb.ErrorHelpers.html","title":"MazeServerWeb.ErrorHelpers","type":"module","doc":"Conveniences for translating and building error messages."},{"ref":"MazeServerWeb.ErrorHelpers.html#error_tag/2","title":"MazeServerWeb.ErrorHelpers.error_tag/2","type":"function","doc":"Generates tag for inlined form input errors."},{"ref":"MazeServerWeb.ErrorHelpers.html#translate_error/1","title":"MazeServerWeb.ErrorHelpers.translate_error/1","type":"function","doc":"Translates an error message using gettext."},{"ref":"MazeServerWeb.ErrorView.html","title":"MazeServerWeb.ErrorView","type":"module","doc":""},{"ref":"MazeServerWeb.ErrorView.html#__phoenix_recompile__?/0","title":"MazeServerWeb.ErrorView.__phoenix_recompile__?/0","type":"function","doc":"Returns true whenever the list of templates changes in the filesystem."},{"ref":"MazeServerWeb.ErrorView.html#__resource__/0","title":"MazeServerWeb.ErrorView.__resource__/0","type":"function","doc":"The resource name, as an atom, for this view"},{"ref":"MazeServerWeb.ErrorView.html#__templates__/0","title":"MazeServerWeb.ErrorView.__templates__/0","type":"function","doc":"Returns the template root alongside all templates."},{"ref":"MazeServerWeb.ErrorView.html#render/2","title":"MazeServerWeb.ErrorView.render/2","type":"function","doc":"Renders the given template locally."},{"ref":"MazeServerWeb.ErrorView.html#template_not_found/2","title":"MazeServerWeb.ErrorView.template_not_found/2","type":"function","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template."},{"ref":"MazeServerWeb.Gettext.html","title":"MazeServerWeb.Gettext","type":"module","doc":"A module providing Internationalization with a gettext-based API. By using Gettext, your module gains a set of macros for translations, for example: import MazeServerWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;) See the Gettext Docs for detailed usage."},{"ref":"MazeServerWeb.Gettext.html#dgettext/3","title":"MazeServerWeb.Gettext.dgettext/3","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#dgettext_noop/2","title":"MazeServerWeb.Gettext.dgettext_noop/2","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#dngettext/5","title":"MazeServerWeb.Gettext.dngettext/5","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#dngettext_noop/3","title":"MazeServerWeb.Gettext.dngettext_noop/3","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#gettext/2","title":"MazeServerWeb.Gettext.gettext/2","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#gettext_comment/1","title":"MazeServerWeb.Gettext.gettext_comment/1","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#gettext_noop/1","title":"MazeServerWeb.Gettext.gettext_noop/1","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#handle_missing_bindings/2","title":"MazeServerWeb.Gettext.handle_missing_bindings/2","type":"function","doc":"Default handling for missing bindings. This function is called when there are missing bindings in a translation. It takes a Gettext.MissingBindingsError struct and the translation with the wrong bindings left as is with the %{} syntax. For example, if something like this is called: MyApp.Gettext.gettext(&quot;Hello %{name}, welcome to %{country}&quot;, name: &quot;Jane&quot;, country: &quot;Italy&quot;) and our it/LC_MESSAGES/default.po looks like this: msgid &quot;Hello %{name}, welcome to %{country}&quot; msgstr &quot;Ciao %{name}, benvenuto in %{cowntry}&quot; # (typo) then Gettext will call: MyApp.Gettext.handle_missing_bindings(exception, &quot;Ciao Jane, benvenuto in %{cowntry}&quot;) where exception is a struct that looks like this: %Gettext.MissingBindingsError{ backend: MyApp.Gettext, domain: &quot;default&quot;, locale: &quot;it&quot;, msgid: &quot;Hello %{name}, welcome to %{country}&quot;, bindings: [:country], } The return value of the c:handle_missing_bindings/2 callback is used as the translated string that the translation macros and functions return. The default implementation for this function uses Logger.error/1 to warn about the missing binding and returns the translated message with the incomplete bindings. This function can be overridden. For example, to raise when there are missing bindings: def handle_missing_bindings(exception, _incomplete) do raise exception end Callback implementation for Gettext.Backend.handle_missing_bindings/2."},{"ref":"MazeServerWeb.Gettext.html#handle_missing_plural_translation/6","title":"MazeServerWeb.Gettext.handle_missing_plural_translation/6","type":"function","doc":"Default handling for plural translations with a missing translation. Same as c:handle_missing_translation/4, but for plural translations. In this case, n is the number used for pluralizing the translated string. Callback implementation for Gettext.Backend.handle_missing_plural_translation/6."},{"ref":"MazeServerWeb.Gettext.html#handle_missing_translation/4","title":"MazeServerWeb.Gettext.handle_missing_translation/4","type":"function","doc":"Default handling for translations with a missing translation. When a Gettext function/macro is called with a string to translate into a locale but that locale doesn&#39;t provide a translation for that string, this callback is invoked. msgid is the string that Gettext tried to translate. This function should return {:ok, translated} if a translation can be fetched or constructed for the given string, or {:default, msgid} otherwise. Callback implementation for Gettext.Backend.handle_missing_translation/4."},{"ref":"MazeServerWeb.Gettext.html#lgettext/4","title":"MazeServerWeb.Gettext.lgettext/4","type":"function","doc":""},{"ref":"MazeServerWeb.Gettext.html#lngettext/6","title":"MazeServerWeb.Gettext.lngettext/6","type":"function","doc":""},{"ref":"MazeServerWeb.Gettext.html#ngettext/4","title":"MazeServerWeb.Gettext.ngettext/4","type":"macro","doc":""},{"ref":"MazeServerWeb.Gettext.html#ngettext_noop/2","title":"MazeServerWeb.Gettext.ngettext_noop/2","type":"macro","doc":""},{"ref":"MazeServerWeb.LayoutView.html","title":"MazeServerWeb.LayoutView","type":"module","doc":""},{"ref":"MazeServerWeb.LayoutView.html#__phoenix_recompile__?/0","title":"MazeServerWeb.LayoutView.__phoenix_recompile__?/0","type":"function","doc":"Returns true whenever the list of templates changes in the filesystem."},{"ref":"MazeServerWeb.LayoutView.html#__resource__/0","title":"MazeServerWeb.LayoutView.__resource__/0","type":"function","doc":"The resource name, as an atom, for this view"},{"ref":"MazeServerWeb.LayoutView.html#__templates__/0","title":"MazeServerWeb.LayoutView.__templates__/0","type":"function","doc":"Returns the template root alongside all templates."},{"ref":"MazeServerWeb.LayoutView.html#render/2","title":"MazeServerWeb.LayoutView.render/2","type":"function","doc":"Renders the given template locally."},{"ref":"MazeServerWeb.LayoutView.html#template_not_found/2","title":"MazeServerWeb.LayoutView.template_not_found/2","type":"function","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template."},{"ref":"MazeServerWeb.MazeLive.html","title":"MazeServerWeb.MazeLive","type":"module","doc":""},{"ref":"MazeServerWeb.MazeLive.html#handle_event/3","title":"MazeServerWeb.MazeLive.handle_event/3","type":"function","doc":"Callback implementation for Phoenix.LiveView.handle_event/3."},{"ref":"MazeServerWeb.MazeLive.html#mount/2","title":"MazeServerWeb.MazeLive.mount/2","type":"function","doc":"Callback implementation for Phoenix.LiveView.mount/2."},{"ref":"MazeServerWeb.MazeLive.html#render/1","title":"MazeServerWeb.MazeLive.render/1","type":"function","doc":"Callback implementation for Phoenix.LiveView.render/1."},{"ref":"MazeServerWeb.MazeSocketChannel.html","title":"MazeServerWeb.MazeSocketChannel","type":"module","doc":""},{"ref":"MazeServerWeb.MazeSocketChannel.html#handle_in/3","title":"MazeServerWeb.MazeSocketChannel.handle_in/3","type":"function","doc":"Handle incoming events. Example def handle_in(&quot;ping&quot;, payload, socket) do {:reply, {:ok, payload}, socket} end Callback implementation for Phoenix.Channel.handle_in/3."},{"ref":"MazeServerWeb.MazeSocketChannel.html#join/3","title":"MazeServerWeb.MazeSocketChannel.join/3","type":"function","doc":"Handle channel joins by topic. To authorize a socket, return {:ok, socket} or {:ok, reply, socket}. To refuse authorization, return {:error, reason}. Example def join(&quot;room:lobby&quot;, payload, socket) do if authorized?(payload) do {:ok, socket} else {:error, %{reason: &quot;unauthorized&quot;}} end end Callback implementation for Phoenix.Channel.join/3."},{"ref":"MazeServerWeb.MazeSocketChannel.html#start_link/1","title":"MazeServerWeb.MazeSocketChannel.start_link/1","type":"function","doc":""},{"ref":"MazeServerWeb.MazeView.html","title":"MazeServerWeb.MazeView","type":"module","doc":""},{"ref":"MazeServerWeb.MazeView.html#__phoenix_recompile__?/0","title":"MazeServerWeb.MazeView.__phoenix_recompile__?/0","type":"function","doc":"Returns true whenever the list of templates changes in the filesystem."},{"ref":"MazeServerWeb.MazeView.html#__resource__/0","title":"MazeServerWeb.MazeView.__resource__/0","type":"function","doc":"The resource name, as an atom, for this view"},{"ref":"MazeServerWeb.MazeView.html#__templates__/0","title":"MazeServerWeb.MazeView.__templates__/0","type":"function","doc":"Returns the template root alongside all templates."},{"ref":"MazeServerWeb.MazeView.html#render/2","title":"MazeServerWeb.MazeView.render/2","type":"function","doc":"Renders the given template locally."},{"ref":"MazeServerWeb.MazeView.html#template_not_found/2","title":"MazeServerWeb.MazeView.template_not_found/2","type":"function","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template."},{"ref":"MazeServerWeb.PageController.html","title":"MazeServerWeb.PageController","type":"module","doc":""},{"ref":"MazeServerWeb.PageController.html#index/2","title":"MazeServerWeb.PageController.index/2","type":"function","doc":""},{"ref":"MazeServerWeb.PageView.html","title":"MazeServerWeb.PageView","type":"module","doc":""},{"ref":"MazeServerWeb.PageView.html#__phoenix_recompile__?/0","title":"MazeServerWeb.PageView.__phoenix_recompile__?/0","type":"function","doc":"Returns true whenever the list of templates changes in the filesystem."},{"ref":"MazeServerWeb.PageView.html#__resource__/0","title":"MazeServerWeb.PageView.__resource__/0","type":"function","doc":"The resource name, as an atom, for this view"},{"ref":"MazeServerWeb.PageView.html#__templates__/0","title":"MazeServerWeb.PageView.__templates__/0","type":"function","doc":"Returns the template root alongside all templates."},{"ref":"MazeServerWeb.PageView.html#render/2","title":"MazeServerWeb.PageView.render/2","type":"function","doc":"Renders the given template locally."},{"ref":"MazeServerWeb.PageView.html#template_not_found/2","title":"MazeServerWeb.PageView.template_not_found/2","type":"function","doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template."},{"ref":"MazeServerWeb.Router.html","title":"MazeServerWeb.Router","type":"module","doc":""},{"ref":"MazeServerWeb.Router.html#api/2","title":"MazeServerWeb.Router.api/2","type":"function","doc":""},{"ref":"MazeServerWeb.Router.html#browser/2","title":"MazeServerWeb.Router.browser/2","type":"function","doc":""},{"ref":"MazeServerWeb.Router.html#call/2","title":"MazeServerWeb.Router.call/2","type":"function","doc":"Callback invoked by Plug on every request."},{"ref":"MazeServerWeb.Router.html#init/1","title":"MazeServerWeb.Router.init/1","type":"function","doc":"Callback required by Plug that initializes the router for serving web requests."},{"ref":"MazeServerWeb.Router.Helpers.html","title":"MazeServerWeb.Router.Helpers","type":"module","doc":"Module with named helpers generated from MazeServerWeb.Router."},{"ref":"MazeServerWeb.Router.Helpers.html#live_path/2","title":"MazeServerWeb.Router.Helpers.live_path/2","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#live_path/3","title":"MazeServerWeb.Router.Helpers.live_path/3","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#live_url/2","title":"MazeServerWeb.Router.Helpers.live_url/2","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#live_url/3","title":"MazeServerWeb.Router.Helpers.live_url/3","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#page_path/2","title":"MazeServerWeb.Router.Helpers.page_path/2","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#page_path/3","title":"MazeServerWeb.Router.Helpers.page_path/3","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#page_url/2","title":"MazeServerWeb.Router.Helpers.page_url/2","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#page_url/3","title":"MazeServerWeb.Router.Helpers.page_url/3","type":"function","doc":""},{"ref":"MazeServerWeb.Router.Helpers.html#path/2","title":"MazeServerWeb.Router.Helpers.path/2","type":"function","doc":"Generates the path information including any necessary prefix."},{"ref":"MazeServerWeb.Router.Helpers.html#static_integrity/2","title":"MazeServerWeb.Router.Helpers.static_integrity/2","type":"function","doc":"Generates an integrity hash to a static asset given its file path."},{"ref":"MazeServerWeb.Router.Helpers.html#static_path/2","title":"MazeServerWeb.Router.Helpers.static_path/2","type":"function","doc":"Generates path to a static asset given its file path."},{"ref":"MazeServerWeb.Router.Helpers.html#static_url/2","title":"MazeServerWeb.Router.Helpers.static_url/2","type":"function","doc":"Generates url to a static asset given its file path."},{"ref":"MazeServerWeb.Router.Helpers.html#url/1","title":"MazeServerWeb.Router.Helpers.url/1","type":"function","doc":"Generates the connection/endpoint base URL without any path information."},{"ref":"MazeServerWeb.UserSocket.html","title":"MazeServerWeb.UserSocket","type":"module","doc":""},{"ref":"MazeServerWeb.UserSocket.html#connect/3","title":"MazeServerWeb.UserSocket.connect/3","type":"function","doc":"Callback implementation for Phoenix.Socket.connect/3."},{"ref":"MazeServerWeb.UserSocket.html#id/1","title":"MazeServerWeb.UserSocket.id/1","type":"function","doc":"Identifies the socket connection. Socket IDs are topics that allow you to identify all sockets for a given user: def id(socket), do: &quot;users_socket:\#{socket.assigns.user_id}&quot; Would allow you to broadcast a &quot;disconnect&quot; event and terminate all active sockets and channels for a given user: MyApp.Endpoint.broadcast(&quot;users_socket:&quot; &lt;&gt; user.id, &quot;disconnect&quot;, %{}) Returning nil makes this socket anonymous. Callback implementation for Phoenix.Socket.id/1."},{"ref":"readme.html","title":"MazeServer","type":"extras","doc":"MazeServer To start your Phoenix server: Install dependencies with mix deps.get Install Node.js dependencies with cd assets &amp;&amp; npm install Start Phoenix endpoint with mix phx.server Now you can visit localhost:4000 from your browser. Ready to run in production? Please check our deployment guides."},{"ref":"readme.html#learn-more","title":"MazeServer - Learn more","type":"extras","doc":"Official website: http://www.phoenixframework.org/ Guides: https://hexdocs.pm/phoenix/overview.html Docs: https://hexdocs.pm/phoenix Mailing list: http://groups.google.com/group/phoenix-talk Source: https://github.com/phoenixframework/phoenix"}]